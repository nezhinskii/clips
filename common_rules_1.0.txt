;========================================================================
; Этот блок реализует логику обмена информацией с графической оболочкой,
; а также механизм остановки и повторного пуска машины вывода
; Русский текст в комментариях разрешён!

(deftemplate ioproxy  ; шаблон факта-посредника для обмена информацией с GUI
	(slot fact-id)        ; теоретически тут id факта для изменения
	(multislot answers)   ; возможные ответы
	(multislot messages)  ; исходящие сообщения
	(slot reaction)       ; возможные ответы пользователя
	(slot value)          ; выбор пользователя
	(slot restore)        ; забыл зачем это поле
)

; Собственно экземпляр факта ioproxy
(deffacts proxy-fact
	(ioproxy
		(fact-id 0112) ; это поле пока что не задействовано
		(value none)   ; значение пустое
		(messages)     ; мультислот messages изначально пуст
	)
)

(defrule clear-messages
	(declare (salience 90))
	?clear-msg-flg <- (clearmessage)
	?proxy <- (ioproxy)
	=>
	(modify ?proxy (messages))
	(retract ?clear-msg-flg)
	(printout t "Messages cleared ..." crlf)	
)

(defrule set-output-and-halt
	(declare (salience 99))
	?current-message <- (sendmessagehalt $?new-msg)
	?proxy <- (ioproxy (messages $?msg-list))
	=>
	(modify ?proxy (messages ?new-msg))
	(retract ?current-message)
	(halt)
)

(deftemplate type
	(slot type)
)
(deftemplate requirement
	(slot requirement)
)	
(deftemplate platform
	(slot platform)
)	
(deftemplate language
	(slot language)
)	
(deftemplate framework
	(slot framework)
)	
(deftemplate language_property
	(slot language_property)
)	

(deftemplate rule_confidence
	(slot ruleNumber (type NUMBER))
	(slot confidence (type NUMBER))
)	

(deftemplate add-type ;шаблон факта-посредника для выбора типа проекта
	(slot type)
)	

(deftemplate add-requirement ;шаблон факта-посредника для выбора требования к проекту
	(slot requirement)
)

(deftemplate add-language_property ;шаблон факта-посредника для выбора свойств языка к проекту
	(slot language_property)
)

(defrule set-input-type-and-halt
	(declare (salience 98))
	?proxy <- (add-requirement (requirement ?requirement))
	=>
	(assert (requirement (requirement ?requirement)))
	(retract ?proxy)
	(assert (sendmessagehalt "Добавлено требование к проекту:" ?requirement))
	(halt)
)

(defrule set-input-requirement-and-halt
	(declare (salience 98))
	?proxy <- (add-type (type ?type))
	=>
	(assert (type (type ?type)))
	(retract ?proxy)
	(assert (sendmessagehalt "Добавлен тип проекта:" ?type))
	(halt)
)

(defrule set-input-language_property-and-halt
	(declare (salience 98))
	?proxy <- (add-language_property (language_property ?language_property))
	=>
	(assert (language_property (language_property ?language_property)))
	(retract ?proxy)
	(assert (sendmessagehalt "Добавлено свойство языка:" ?language_property))
	(halt)
)


;(defrule append-output-and-halt
;	//  Аналогичен предыдущему, но с добавлением сообщения, а не с заменой
;)

;(defrule set-output-and-proceed
;	//  Аналогичен предыдущему, но с установкой сообщения и продолжением работы (извлекая факт с текущим сообщением)
;)

;(defrule append-output-and-proceed
;	//  По аналогии
;)

;======================================================================================
